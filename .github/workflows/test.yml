name: Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      rabbit_mq:
        image: rabbitmq:3.8
        env:
          RABBITMQ_DEFAULT_USER: rabbitmq_user
          RABBITMQ_DEFAULT_PASS: rabbitmq_pass
        ports:
          - 5672:5672
      redis:
        # Docker Hub image
        image: redis
        ports:
          - 6379:6379
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        image: postgres:11
        env:
          POSTGRES_DB: db_name
          POSTGRES_PASSWORD: db_pass
          POSTGRES_USER: db_user
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: debug
        run: |
          printenv
          pwd

      - name: Set up Python 3
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd migration/mock
          python -m pip install -r requirements.txt
          python mock.py

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build
        run: go build

      - name: Check services
        run: ./infomark console configuration test .infomark-ci.yml

      - name: Migrate Database
        run: INFOMARK_CONFIG_FILE=`realpath .infomark-ci.yml` ./infomark console database migrate

      - name: Seed Database
        run: |
          cd migration/mock
          PGPASSWORD=db_pass psql -h 'localhost' -U 'db_user' -d 'db_name' -f mock.sql

      - name: Run unit tests
        run: |
          export INFOMARK_CONFIG_FILE=`realpath .infomark-ci.yml`
          go test ./... -cover -v --goblin.timeout 15s -coverprofile coverage.out

